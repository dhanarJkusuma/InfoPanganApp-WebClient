<script>
    $(document).ready(function(){
        var lineChartCanvas = $("#areaChart").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var now = new Date();
        var labels = [];
        var firstDate = now.getDate() - 7;
        var tmp = firstDate;
        for(var i=0;i<=7;i++){
            labels[i] = tmp;
            tmp++;
        }

        var value = [];
        var value2 = [];
        var value3 = [];
        var index=0;
        <% dataChart.forEach(function(d){ %>
            value.push(<%= d %>)
        <% }); %>
        <% dataChart1.forEach(function(d){ %>
            value2.push(<%= d %>)
        <% }); %>
        <% dataChart2.forEach(function(d){ %>
            value3.push(<%= d %>)
        <% }); %>

        var areaChartData = {
            labels: labels,
            datasets: [
                {
                    label: "<%= vname %>",
                    fillColor: "rgba(210, 214, 222, 1)",
                    strokeColor: "rgba(210, 214, 222, 1)",
                    pointColor: "rgba(210, 214, 222, 1)",
                    pointStrokeColor: "#c1c7d1",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: value
                },
                {
                    label: "<%= vname1 %>",
                    fillColor: "rgba(60,141,188,0.9)",
                    strokeColor: "rgba(60,141,188,0.8)",
                    pointColor: "#3b8bba",
                    pointStrokeColor: "rgba(60,141,188,1)",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(60,141,188,1)",
                    data: value2
                },
                {
                    label: "<%= vname2 %>",
                    fillColor: "rgba(104,111,108,0.9)",
                    strokeColor: "rgba(90,134,12,0.8)",
                    pointColor: "#3fd21d",
                    pointStrokeColor: "rgba(12,131,198,1)",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(40,112,138,1)",
                    data: value2
                }
            ]
        };

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template

            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        };

        var lineChart = new Chart(lineChartCanvas);
        var lineChartOptions = areaChartOptions;
        lineChartOptions.datasetFill = false;
        lineChart.Line(areaChartData, lineChartOptions);
    });
</script>